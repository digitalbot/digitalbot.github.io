<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: emacs | About Digital]]></title>
  <link href="http://blog.digital-bot.com/blog/tags/emacs/atom.xml" rel="self"/>
  <link href="http://blog.digital-bot.com/"/>
  <updated>2014-02-06T23:06:16+09:00</updated>
  <id>http://blog.digital-bot.com/</id>
  <author>
    <name><![CDATA[digital_bot]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MavericksのEmacs24.3がくっそ重くなる件]]></title>
    <link href="http://blog.digital-bot.com/blog/2014/01/22/emacs-distnoted/"/>
    <updated>2014-01-22T23:27:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2014/01/22/emacs-distnoted</id>
    <content type="html"><![CDATA[<p>表題の件。</p>

<p><a href="https://twitter.com/kskexit/status/400209172551065600">https://twitter.com/kskexit/status/400209172551065600</a>">https://twitter.com/kskexit/status/400209172551065600">https://twitter.com/kskexit/status/400209172551065600</a></a></p>

<p><a href="https://twitter.com/kskexit/status/401254523584270337">https://twitter.com/kskexit/status/401254523584270337</a>">https://twitter.com/kskexit/status/401254523584270337">https://twitter.com/kskexit/status/401254523584270337</a></a></p>

<p><a href="https://twitter.com/kskexit/status/402736969123237888">https://twitter.com/kskexit/status/402736969123237888</a>">https://twitter.com/kskexit/status/402736969123237888">https://twitter.com/kskexit/status/402736969123237888</a></a></p>

<p><a href="https://twitter.com/kskexit/status/402737139034492928">https://twitter.com/kskexit/status/402737139034492928</a>">https://twitter.com/kskexit/status/402737139034492928">https://twitter.com/kskexit/status/402737139034492928</a></a></p>

<p><a href="https://twitter.com/kskexit/status/408166401245868033">https://twitter.com/kskexit/status/408166401245868033</a>">https://twitter.com/kskexit/status/408166401245868033">https://twitter.com/kskexit/status/408166401245868033</a></a></p>

<p><a href="https://twitter.com/kskexit/status/413232659922305024">https://twitter.com/kskexit/status/413232659922305024</a>">https://twitter.com/kskexit/status/413232659922305024">https://twitter.com/kskexit/status/413232659922305024</a></a></p>

<p><a href="https://twitter.com/kskexit/status/423377591299346432">https://twitter.com/kskexit/status/423377591299346432</a>">https://twitter.com/kskexit/status/423377591299346432">https://twitter.com/kskexit/status/423377591299346432</a></a></p>

<p>とMavericksにしてから非常に困ってたんだけど</p>

<p><a href="https://twitter.com/mogu/status/425865613811007489">https://twitter.com/mogu/status/425865613811007489</a>">https://twitter.com/mogu/status/425865613811007489">https://twitter.com/mogu/status/425865613811007489</a></a></p>

<p>とのことで、なんだか解決したっぽい。</p>

<hr />

<p>Emacs24.4では直ってるらしいのではやく24.4がでてほしいとは思う。</p>

<h4>参考</h4>

<p>この記事書いてるときに、同じ悩みを持ってる人のブログも見つけた。</p>

<ul>
<li><a href="http://blog.n-z.jp/blog/2013-12-27-emacs-inline-patch.html">distnotedの暴走が止まるというCocoa Emacsのinline patch修正版を使ってみた</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vimを使いやすくする]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/10/12/improve-vim/"/>
    <updated>2013-10-12T01:50:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/10/12/improve-vim</id>
    <content type="html"><![CDATA[<p>Emacs派でEmacsは結構拡張してるけど、vimだってコマンドラインから結構手軽につかってる。なぜならEmacsは起動に時間がかかるし、CocoaEmacsに最適化した設定だからあまりターミナルから起動したくないから。もちろんそこらへんもいろいろ工夫はしてるけど、ほんとにさっくりファイルを弄りたいときなんかは結構vimで弄ったりする。</p>

<p>これまではtabの設定とか最低限の設定をした.vimrcを使ってたんだけど、せっかくだからvimももう少し便利にすることにした。まぁ何かに行き詰まったときにこういう設定をすると仕事してる気になって落ち着くっていう悪い癖なだけな気もする。</p>

<!-- more -->


<h2>.vimrc</h2>

<p><a href="http://blog.digital-bot.com/blog/2013/09/30/macvim-kaoriya/">前回</a>、最新のVim7.4のMacVim-Kaoriyaを入れたお陰<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>でどうやらいくつかのプラグインが強化されてるらしい。まぁ詳しい説明は<a href="http://qiita.com/">Qiita</a>なんかにまかせる。</p>

<p>まぁだらだら書くのもあれなので手っ取り早く<strong>.vim</strong>を晒そう</p>

<h3>リポジトリ</h3>

<ul>
<li><a href="https://github.com/digitalbot/dot-vim">dot-vim</a></li>
</ul>


<p>今回我ながらポイントだと思うのが、READMEのとおりにセットアップすれば大体どの環境(unix系)でも動く汎用的な設定ができたところ。Emacsの設定はとてもじゃないけど、現状自分のMac以外に持ち出せないのでここは少しこだわってみた。</p>

<p>そしてそのセットアップもできる限り簡単に仕上げたつもり。基本的には<code>git clone --recursive</code>して<code>./setup.sh</code>するだけ。簡単。</p>

<pre><code>$ git clone --recursive git://github.com/digitalbot/dot-vim.git
$ cd dot-vim
$ ./setup.sh
$ vim +NeoBundleInstall +q
</code></pre>

<p>READMEからの引用だけど、これで元のvimの挙動をそんなにいじらないけど細かいところで便利なvimができあがる。git cloneの<code>--recursive</code>については<a href="http://blog.digital-bot.com/blog/2013/08/31/git-clone-recursive/">以前書いたとおり</a>。</p>

<p>ともかく、詳しい設定の内容は割愛するけど、<code>NeoBundle</code>、<code>Unite</code>、<code>Lightline</code>、<code>Quickrun</code>とか<code>Neocomplete</code>を導入した。これ以上増やすとEmacsみたいになるので、ここらへんが必要最低限だと思う。ちなみに、<code>if_lua</code>が効かない、つまり古めのvimでもそんときは<code>Neocomplete</code>じゃなく<code>Neocomplcache</code>を使うように条件分岐してるから、ほんとに大体の環境でこの<strong>.vim</strong>は動くはず。</p>

<h2>おわりに</h2>

<p>エディタの拡張は「どこまでやるか」のバランスがとてもむずかしいように思う。<strong>Emacs</strong>ではやりすぎて重たくなってしまってるし(それでもこの記事も<strong>Emacs</strong>で書いてるけど)、できるだけ必要最低限でポータビリティがあるのがカッコイイと最近は思い始めた。あと、全然環境の違う赤の他人が<code>git clone</code>して試せるかどうかを考えてるってもの個人的には渋くてかっこいいと思う。</p>

<p>なお、Lightlineはコマンドラインから<code>mvim</code>してGUIで動かすと変なwarnを出すのでGUIではオフにしている。そこら辺のことはまた別のエントリにしようかと思ってる。</p>

<p>あとvimは引数に<code>+command</code>するとそのコマンドを起動時に実行してくれるらしく、これのお陰で<code>vim +NeoBundleInstall +q</code>といった風にワンライナーでプラグインをインストールできるのが良いと思った。</p>

<p>でもvim scriptはちょっとよくわかんないとも思った。<del>elispのほうが美しい</del></p>

<hr />

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p><code>if_lua</code>が大事らしい
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacVim Kaoriyaをhomebrewから入れた]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/30/macvim-kaoriya/"/>
    <updated>2013-09-30T19:56:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/30/macvim-kaoriya</id>
    <content type="html"><![CDATA[<p>Emacsを愛用していて、システムデフォルトのではなくhomebrewで自前のEmacsを入れてるわけなんだけど、不公平な気もしたのでVimも自前のを入れることにした。</p>

<h2>MacVim KaoriYa</h2>

<p>やはりvimもGUI版があれば使いたいと思ったので<a href="http://code.google.com/p/macvim-kaoriya/">MacVim KaoriYa</a>を導入することにした。MacVim Kaoriyaのメリットは上記リンクに詳しく書いてあるし、なんだったらいろいろな設定方法も書いてある。</p>

<p>環境としては</p>

<ul>
<li>MacOSX Mountain Lion, Intel Core i7, 8 GB RAM</li>
</ul>


<p>と、後述するSnowLeopardで導入した。</p>

<!-- more -->


<p>ここで、後に入れるプラグインのためにも、<strong>v7.4</strong>, <strong>if_lua</strong> に対応していることが求められる。デフォルトではhomebrewのレシピが無いんだけど、世の中奇特な人はいるもんで、レシピを用意してくれてる人がいる<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<pre><code>$ brew tap supermomonga/homebrew-splhack
$ brew install --HEAD cmigemo-mk
$ brew install --HEAD ctags-objc-ja
$ brew install --HEAD gettext-mk
$ brew install --HEAD macvim-kaoriya
$ brew linkapps
</code></pre>

<p>これだけでなんとかなるはず。<br/>
emacsでも使うから<code>ctags</code>や<code>cmigemo</code>は標準フォーミュラの方でいれちゃったから</p>

<pre><code>$ brew unlink cmigemo &amp;&amp; brew link -f cmigemo-mk
</code></pre>

<p>とかする必要があった。</p>

<h2>SnowLeopardでの問題</h2>

<p>ちなみに、もう一台のデスクトップはSnowLeopardなんだけど、SnowLeopard環境ではgccでのコンパイルにしくじるので<code>brew install --HEAD macvim-kaoriya</code>の前にフォーミュラを少し編集する必要がある。それについては <a href="http://kronus9.sblo.jp/article/71512104.html">MacVim KaoriYaをSnow Leopard + Homebrewでビルドした</a> にて詳しい方法が載っている。<br/>
自分もエラーログ追っててclangを使うのはすぐわかったんだけど、<code>--use-clang</code>してもダメだから参ってた。</p>

<h2>.vimrc</h2>

<p>vimrcもいろいろ弄ったんだけど、まぁそこら辺は違うエントリにまとめるとする。</p>

<h2>ちなみに</h2>

<p>アイコンからGUIのMacVim KaoriYaを起動する分には問題ないけど、そのままじゃターミナルでパスが通ってないのでなんとかする必要がある。そこら辺についても他のエントリにまとめると思う。</p>

<hr />

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p><a href="http://supermomonga.com/2013/06/15/macvim_kaoriya_homebrew/">homebrewを使ってちょっと新しめのMacVim KaoriYaを使おう</a>
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[emacsとvimの使い分け]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/17/emacs-and-vim/"/>
    <updated>2013-09-17T20:19:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/17/emacs-and-vim</id>
    <content type="html"><![CDATA[<h3>ひとりごと</h3>

<p><strong>Emacs</strong>はMacBookAirローカルでCocoaEmacsを動かして、<code>tramp</code>でサーバ上のファイルいじったりするから徹底的にいじってるけど、<strong>Vim</strong>は逆に<code>ssh</code>したサーバ上で動かすことが多いから出来るだけシンプル且つデフォルトの挙動とそこまで違う挙動をしないような設定をしてる。</p>

<p>そういう意味では<code>C-h</code>が<code>delete-backward-char</code>にすらなってないような他人のEmacsは正直使うことが苦痛にすらなるレベル。ネット上のリポジトリの設定ファイルを手軽に読む方法とかないのかな。<code>git clone</code>とかせず、urlをしていするだけ、みたいな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多段sshの方法]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/15/how-ssh/"/>
    <updated>2013-09-15T19:37:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/15/how-ssh</id>
    <content type="html"><![CDATA[<p>多段sshをするのは知ってれば結構簡単で</p>

<pre><code>[digitalbot@local]$ ssh -t FOO ssh BAR
</code></pre>

<p>と<code>-t</code>オプションを使うことでssh先で後続のコマンドを実行してくれるので<code>local --&gt; FOO --&gt; BAR</code>と多段sshしてくれる。</p>

<!-- more -->


<h2>途中でsudoをはさむ</h2>

<p>途中でsudoを挟んで三段sshするときなんかは少しやっかい。</p>

<pre><code>local --&gt; FOO --&gt; BAR --&gt; BAZ
</code></pre>

<p>でFOOからBARにsshする際に<code>sudo ssh BAR</code>しなきゃいけないとき。
つまりワンライナーじゃなく順番にログインしていくと下記みたいになるやつ。</p>

<pre><code>[digitalbot@local]$ ssh FOO
[digitalbot@FOO]$ sudo ssh BAR
[root@BAR]$ ssh BAZ
</code></pre>

<p>これは</p>

<pre><code>[digitalbot@local]$ ssh -t FOO /usr/bin/sudo ssh -t BAR ssh BAZ
</code></pre>

<p>で一足飛びに途中でsudoを挟んで多段sshできる。sudoじゃなくても、途中で文字コード変換を挟んだりする場合も同じ要領でできるはず。</p>

<p>これはどの環境でもそうなのかよくわからないけど、<code>sudo</code>をフルパスで書かないと<code>ssh -t</code>で仮想ログインしたシェルでパスが通ってなくてエラーがでてしまったので注意が必要。</p>

<h2>.ssh/configでの設定</h2>

<p>当然.ssh/config内で設定しといたほうが楽なので設定したいところなんだけど、途中でsudoを挟む場合の書き方がイマイチよくわかってない。<br/>
途中でsudoがなければ</p>

<pre><code>Host FOO
    Hostname foo.com
    User digitalbot

Host BAR
    Hostname bar.com
    User digitalbot
    ProxyCommand ssh FOO -W %h:%p
</code></pre>

<p>みたいにそれぞれに単純に書くだけで良いのだけど&hellip;<br/>
だれかわかるようだったらsudoを挟む書き方を教えて。<br/>
Emacsのtrampだったら途中でsudoを挟む多段sshもできるから、できないことないと思うんだけど<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<h2>ちなみに</h2>

<p>ProxyCommand内の-Wを使った書き方はOpenSSHのver.5.4以前では使えないのでその場合は<code>nc</code>を使えば良い。</p>

<h4>参考</h4>

<p><a href="http://blog.glidenote.com/blog/2012/02/19/ssh-proxycommand/">多段sshで4段先のサーバに一発ログイン</a></p>

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p><a href="http://blog.digital-bot.com/blog/2013/09/05/emacs-tramp/">Emacs trampを使った多段リモートファイル操作</a>
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
</feed>
