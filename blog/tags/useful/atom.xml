<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: useful | About Digital]]></title>
  <link href="http://blog.digital-bot.com/blog/tags/useful/atom.xml" rel="self"/>
  <link href="http://blog.digital-bot.com/"/>
  <updated>2014-02-14T22:15:35+09:00</updated>
  <id>http://blog.digital-bot.com/</id>
  <author>
    <name><![CDATA[digital_bot]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macを購入したら絶対に使いたい！超オススメアプリ10選！決定版]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/10/12/terminal/"/>
    <updated>2013-10-12T02:23:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/10/12/terminal</id>
    <content type="html"><![CDATA[<p>さて本日は、MacBookAirを今年に買いかえてから、数々のフリーソフト・シェアウェアを使い続けてきた私が、MacBookを買ったら「絶対に」導入したい、超厳選アプリをランキング形式でご紹介したいと思います！今回は無料で使えるものばかり集めてみましたので、シェアウェアに関しては後日またご紹介したいと思います（＾＾）</p>

<p>それでは、ご覧ください！</p>

<p>↓↓</p>

<!-- more -->




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第10位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>まずは定番、Terminalですね。知る人ぞ知る端末エミュレータです。なんとMac OS Xには<strong>最初から入っています！</strong>端末エミュレータの記事ではないので詳しい説明は避けますが、Terminalはなんと、<strong>マウスを使わずに操作できるという魔法のような操作方法</strong>により世界中に多くのユーザがいます。カフェでドヤ顔したい方はぜひ導入すべきと言えるアプリでしょう。</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第9位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>Macと言えばApple、AppleといえばiPod、iPodといえば音楽です。 そう、せっかくMacを買ったからには、音楽を楽しまなければいけません。デフォルトでインストールされている「iTunes」でもよいのですが、ここはキーボードから小気味よく選曲などの操作をして音楽を聴きたいところです。そんなあなたにオススメなのが、このTerminalというアプリ！なんと、<code>afplay</code>と入力して<em>ごにょごにょ</em>するだけで音楽を聞くことが出来ます！また、Terminalには、おまけとして<a href="http://gyazo.com/3f227e2e46c8b0fee1199f899b2709dd">黒い画面にSLを走らせる</a>！機能も付いているので、カフェでの仕事が捗りますね。</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第8位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>さて、次におすすめしたいのが、Terminalというアプリです。このアプリはいわゆる「テキストエディタ」とも言えます。<code>vim</code>とか<code>emacs</code>とか、よくわからないですけど、ともかくテキストをエディットできます。よくわからないですけど、どちらも使えるので世界は平和です。</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第7位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>さて、WindowsでもMacでも変わらない現代の必須ソフト、それは「ウェブブラウザ」ですね。WindowsだとInternetExplorer、通称IEが標準でインストールされていますが、IEは「ブラウザをダウンロードするための便利なソフト」と揶揄されていたりします（苦笑）</p>

<p>Macに標準でインストールされているブラウザであるSafariはそれほど酷評されているわけではありませんが、やはり自分の手に馴染むブラウザを選択して使っていきたいですよね。</p>

<p><strong>そこでTerminalというアプリです（＾＾）</strong></p>

<p><code>w3m</code>とかいうやつをなんとかどうにかインストールみたいなことすれば、そう、ウェブブラウザです！</p>

<p>あと、<a href="http://gyazo.com/3f227e2e46c8b0fee1199f899b2709dd">SLを走らせたりもできます</a>！</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第6位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>Macには最初からMail.appがインストールされています。しかし、アカウントだの同期だのと面倒ですよね。何も気にせず気持よくメールを送りたいときもあるじゃないですか！</p>

<p>そんなときはTerminalというアプリです。</p>

<p><code>sendmail</code>とか適当に<em>ごにょごにょ</em>すれば、そう、メーラーです！</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第5位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>みなさん！twitterはやってますか？？？</p>

<p>今回5位にランク・インしたのはTerminalというツイッタークライアントです！<code>tw</code>とかを<em>ごにょごにょ</em>すればなんかうまくやってくれるみたいです！</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第4位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>4位です</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第3位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>いよいよトップスリー！第3位は「Terminal」です！世界にはEmacsとVim、2種類のエディタしかないことは有名ですが、Terminalなら両方使えます！</p>

<p>さて、この第3位のTerminalというアプリなのですが、第4位のTerminalと、どちらを3位にしようか、最後まですっご〜〜〜〜〜く悩みました！（笑）（＾＾；） それくらい、TerminalとTerminal、どちらもすごくいいアプリなんです！</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第2位</h2>

<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminal</h3>

<p>さて、惜しくも1位を逃すこととなった第2位は、「Terminal」です！</p>

<p>「Terminal」、中には初めて耳にした方も居るかもしれませんね。一般的に、PCを使う場合は、マウスを使わないと操作することが出来ませんが、このTerminalでは<strong>マウスを使わずにPCを操作すること</strong>が可能とされています。ファイル操作や書類の印刷、なんでもできます！それもそのはず！Terminalは端末エミュレータなんです！端末をエミュレートしてるんですから便利なのはあたりまえかな？</p>

<p>世間には多くの端末エミュレータがありますが、私がおすすめしたいのは、やはりTerminalです。最終的に他の端末エミュレータ、例えばiTermなどを使っていくにしても、「マウスを使わずに色々できる」ことを突き詰めることができるTerminalを経験するのはあなたのPCライフにおいて非情に有意義なものとなるでしょう。</p>

<p><strong>ダウンロードはする必要がありません</strong>！</p>

<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  




<br />  


<h2>第1位</h2>

<p>そして栄えある第1位は&hellip;</p>

<br />  




<br />  




<br />  




<br />  




<br />  


<p><img src="/images/terminal.png" alt="terminal" /></p>

<h3>Terminalです！！！！！！</h3>

<br />  




<br />  




<br />  




<br />  


<hr />

<h5>元ネタ</h5>

<ul>
<li><p><a href="http://samuraism.com/2013/10/11/1554">Macを購入したら絶対に導入したい！Windowsを購入しても絶対に導入したい！Linuxをインストールしても絶対に導入したい！超オススメアプリ10選！</a></p></li>
<li><p><a href="http://blog.supermomonga.com/articles/vim/startdash-with-mac.html">Macを購入したら絶対に導入したい！私が3年間で厳選した超オススメアプリ10選！</a></p></li>
<li><p><a href="http://blog.id774.net/post/2013/10/11/408/">Mac を購入したら絶対に導入したい！超オススメアプリ 10 選！</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[複数PCでsshキーを共有する]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/16/ssh-add/"/>
    <updated>2013-09-16T03:28:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/16/ssh-add</id>
    <content type="html"><![CDATA[<p>色んなPCでsshの鍵を共有している場合、単に鍵をコピーするだけでなく<code>ssh-add</code>が必要。</p>

<p>PC Aでssh-keygenしたキーをPC Bにコピーして使ってたんだけど、毎回</p>

<pre><code>enter passphrase for key
</code></pre>

<p>って聞いてきて鍵登録してる意味ないやん、って思いながらパスをポチポチ打ってた。</p>

<p>けどどう考えても鍵コピーした手間に見合った効果得られてないしなんだか損してるって気付いたので重い腰を上げて設定してみた。<br/>
調べたところ、PC Aではssh-keygenしたからssh-agentに登録されてるけど、PC Bでは鍵がssh-agentに登録されてないのが原因ぽいことがわかった。<br/>
そこで</p>

<pre><code>$ eval `ssh-agent`
$ ssh-add [keyのパス（デフォルトは~/.ssh/id_rsaだと思う）]
</code></pre>

<p>することで鍵を登録した。<br/>
これでいろいろ捗るようになった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多段sshの方法]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/15/how-ssh/"/>
    <updated>2013-09-15T19:37:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/15/how-ssh</id>
    <content type="html"><![CDATA[<p>多段sshをするのは知ってれば結構簡単で</p>

<pre><code>[digitalbot@local]$ ssh -t FOO ssh BAR
</code></pre>

<p>と<code>-t</code>オプションを使うことでssh先で後続のコマンドを実行してくれるので<code>local --&gt; FOO --&gt; BAR</code>と多段sshしてくれる。</p>

<!-- more -->


<h2>途中でsudoをはさむ</h2>

<p>途中でsudoを挟んで三段sshするときなんかは少しやっかい。</p>

<pre><code>local --&gt; FOO --&gt; BAR --&gt; BAZ
</code></pre>

<p>でFOOからBARにsshする際に<code>sudo ssh BAR</code>しなきゃいけないとき。
つまりワンライナーじゃなく順番にログインしていくと下記みたいになるやつ。</p>

<pre><code>[digitalbot@local]$ ssh FOO
[digitalbot@FOO]$ sudo ssh BAR
[root@BAR]$ ssh BAZ
</code></pre>

<p>これは</p>

<pre><code>[digitalbot@local]$ ssh -t FOO /usr/bin/sudo ssh -t BAR ssh BAZ
</code></pre>

<p>で一足飛びに途中でsudoを挟んで多段sshできる。sudoじゃなくても、途中で文字コード変換を挟んだりする場合も同じ要領でできるはず。</p>

<p>これはどの環境でもそうなのかよくわからないけど、<code>sudo</code>をフルパスで書かないと<code>ssh -t</code>で仮想ログインしたシェルでパスが通ってなくてエラーがでてしまったので注意が必要。</p>

<h2>.ssh/configでの設定</h2>

<p>当然.ssh/config内で設定しといたほうが楽なので設定したいところなんだけど、途中でsudoを挟む場合の書き方がイマイチよくわかってない。<br/>
途中でsudoがなければ</p>

<pre><code>Host FOO
    Hostname foo.com
    User digitalbot

Host BAR
    Hostname bar.com
    User digitalbot
    ProxyCommand ssh FOO -W %h:%p
</code></pre>

<p>みたいにそれぞれに単純に書くだけで良いのだけど&hellip;<br/>
だれかわかるようだったらsudoを挟む書き方を教えて。<br/>
Emacsのtrampだったら途中でsudoを挟む多段sshもできるから、できないことないと思うんだけど<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。</p>

<h2>ちなみに</h2>

<p>ProxyCommand内の-Wを使った書き方はOpenSSHのver.5.4以前では使えないのでその場合は<code>nc</code>を使えば良い。</p>

<h4>参考</h4>

<p><a href="http://blog.glidenote.com/blog/2012/02/19/ssh-proxycommand/">多段sshで4段先のサーバに一発ログイン</a></p>

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p><a href="http://blog.digital-bot.com/blog/2013/09/05/emacs-tramp/">Emacs trampを使った多段リモートファイル操作</a>
<a href='#fnref:1' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[percolが便利だけど、入れるにはpython2系のほうが良さそう]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/11/about-percol/"/>
    <updated>2013-09-11T01:03:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/11/about-percol</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/mooz/percol">percol</a>というコマンドラインを大変便利にしてくれるソフトウェアがあるのだけれど、これをインストールするときに少しハマった。percolはpython製のツールで、インストール方法は素直に<code>git clone</code>してきて<code>setup.py</code>を手で叩くか、<code>pip install percol</code>するなどあるんだけど、なんだか毎回どうしようか迷う。というのも、あんまりpython製のアプリとして意識したくないから<code>/usr/local/bin</code>とかに入って欲しいんだけど、管理の簡単さなどから<code>pip</code>も捨てがたいよなぁってなるから。</p>

<p>んで、先日もMBAを新調したのでpercolを入れてたんだけど、どうにもインストールが出来ない。pythonに明るくないのでなんて言えばいいかわからないし先日のことなので詳しくは忘れたけど、ヘッダというかモジュールのパスが解決出来てないっぽくてmakeが出来ない状況になってた。</p>

<p>どうしようかなぁと思ってたんだけど、これ、結論からいうと<strong>pythonのバージョンが間違ってた</strong>。</p>

<p>python使いの人にとっては常識なのかもしれないけど、python3系の環境ではダメで、python2系の環境にする必要があっただけみたい。自分は<strong>python3.3.2</strong>を<code>anyenv</code>で管理して入れてたので</p>

<pre><code>$ pyenv install 2.7.5
$ pyenv rehash
$ pyenv global 2.7.5
$ pyenv versions
#=&gt;   system
#=&gt; * 2.7.5 (set by /Users/kosuke/.anyenv/envs/pyenv/version)
#=&gt;   3.3.2
</code></pre>

<p>してもともと<strong>2.7.5</strong>を入れなおしてglobalに設定すれば良かった。そんで結局pipを使うことにしたので</p>

<pre><code>$ pip install percol
</code></pre>

<p>した。これでターミナル上でanythingライクな操作が可能になり、平和にまた一歩近づいた。めでたし。ついでに設定ファイルも載せておこう。</p>

<p><div><script src='https://gist.github.com/6511590.js'></script>
<script type="text/javascript">$("td.line-numbers").remove();</script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<h4>参考</h4>

<ul>
<li><p><a href="http://d.hatena.ne.jp/kbkbkbkb1/20120429/1335835500">anything 的な絞りこみコマンド percol の紹介</a></p></li>
<li><p><a href="http://tomykaira.hatenablog.com/entry/2013/05/12/115152">git + percol(anything on terminal) が便利</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew-caskが良さそうなので導入してみた]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/09/08/homebrew-cask/"/>
    <updated>2013-09-08T03:11:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/09/08/homebrew-cask</id>
    <content type="html"><![CDATA[<p>どうやらMacのGUIアプリケーションまでも<code>homebrew</code>で管理をしようとしている人がいるらしい。確かに考えなくもなかったけど、本当に作った人がいるとは思わなかったし、うまいことhomebrewを拡張した感じで作ってると感じた。マックのアプリのパッケージ管理がこれで楽になればよいなぁと思う。バージョンの管理も。</p>

<!-- more -->


<h2>Git repo</h2>

<ul>
<li><a href="https://github.com/phinze/homebrew-cask">https://github.com/phinze/homebrew-cask</a></li>
</ul>


<h2>導入方法</h2>

<pre><code>$ brew tap phinze/homebrew-cask
$ brew install brew-cask
</code></pre>

<p>READMEを読む感じ、これだけ。そしておもむろに</p>

<pre><code>$ brew cask install google-chrome
</code></pre>

<p>とかすると<code>~/Applications/"Google Chrome.app"</code>が生まれるという寸法らしい。すごいお手軽。一々ダウンロードリンクを探すこともなければ、ドラッグアンドドロップも必要ない。しかも、<code>brew cask install</code>に複数のアプリ名を渡せば一括でインストールが可能。これは便利だと思う。良い。ここでちょっと関心したのが<code>brew cask list</code>でちゃんとhomebrew-caskで入れたアプリが一覧できること。これをなんかに書き出しとけば他の環境でもパイプで渡して再現が簡単。</p>

<h2>雑感</h2>

<p>homebrew本体とは微妙に違ってるところがあって、homebrewでは<code>/usr/local/Cellar</code>以下に実体をインストールしていくのに対し、homebrew-caskでインストールされたアプリケーションは、<code>Caskroom</code>というところに入る。これはデフォルトだと<code>/opt/homebrew-cask/Caskroom</code>で、最初のアプリをインストール時に<em>「ここにCaskroom作りたいんだけどパーミッションの関係で作れないからsudoパスワードを入力してくれ」</em>的なことを言われた。そして、このCaskroomから<code>~/Applications</code>にシンボリックリンクが貼られるみたい。もちろんこれもデフォルトの話で、</p>

<pre><code>$ export HOMEBREW_CASK_OPTS="--appdir=/Applications"
</code></pre>

<p>とか環境変数で変えられるみたい。<strong>update</strong>もどうやら<code>brew upgrade</code>で出来るみたいでココらへんは空気のような振る舞いをしてくれる。</p>

<h5>気になる点としては</h5>

<ul>
<li><p><code>~/Applications</code>に入るのはシンボリックリンクなので、ランチャー(少なくとも<code>QuickSilver</code>)で認識できない</p></li>
<li><p><code>brew cask uninstall</code>時には<code>*.plst</code>なども一緒に掃除してくれるのか(多分してくれない)</p>

<ul>
<li>そして確かにアンインストールはされるけど、<code>/opt/homebrew-cask/Caskroom</code>以下に空のそのアプリのディレクトリが残る</li>
</ul>
</li>
</ul>


<p>くらいかなぁ。今もともと入れてるアプリを置き換えるかどうかは少し迷うかな。ちょっといろいろ試してみようかと思う。いずれにせよ、これをうまく使いこなせばマックブックを買い換えた時なんかに絶大な威力を発揮する気がする。</p>
]]></content>
  </entry>
  
</feed>
