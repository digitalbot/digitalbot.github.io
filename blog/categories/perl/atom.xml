<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Perl | About Digital]]></title>
  <link href="http://blog.digital-bot.com/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://blog.digital-bot.com/"/>
  <updated>2014-09-03T00:02:39+09:00</updated>
  <id>http://blog.digital-bot.com/</id>
  <author>
    <name><![CDATA[digital_bot]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[YAPC::Asia Tokyo 2014にギターヒーローを見た]]></title>
    <link href="http://blog.digital-bot.com/blog/2014/08/31/yapcasia2014/"/>
    <updated>2014-08-31T00:51:15+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2014/08/31/yapcasia2014</id>
    <content type="html"><![CDATA[<p>今年も<a href="http://yapcasia.org/2014/">YAPC::Asia Tokyo 2014</a>に8/29,30と参加し、色々と面白い話を聞いてきた。</p>

<p>酒と深夜のノリで、推敲しないのは良くないと思いつつも眠いので上げようと思う。</p>

<p><img src="/images/yapc.jpg" alt="ノベルティ" /></p>

<!-- more -->


<h2>いきなりまとめっぽいの</h2>

<p>今年のYAPC::Asia Tokyoは多くの人が指摘しているようにPerl以外の話が多かった(或いは目についた)ように思う。</p>

<p>もちろんPerlの話も多くあり、例えばSawyerさんの話はPlack/PSGIのcoolさを全力で肯定しながらも、ビジネス的な価値やレガシーの存在意義・なんでも新しければ良いってものではないという話からの、最後にはやはりPlack/PSGIがその問題をも乗り越える力を持つことを示していてとても聞き応えがあったと思う(そして同時通訳素晴らしい)。</p>

<p>表面的に見ると、このPerlトーク割合については「やはりPerlはオワコン」などということに考えが行ってもおかしくはないかもしれない。</p>

<p>(実際、Perlやってる人がPerlから逃げ出すためにはどの言語を学べば良いか見本市にならないか最初は少し不安にはなったが)</p>

<p>しかし結局、他の言語から学び取ろうとか、違うやり方を知ろうとか、或いはPerlってのは<code>TMTOWTDI</code>をやはり地で行っていて、もはや言語にこだわるとかじゃなくて<code>TMTOWTDI</code>の思想のもとプログラムを書けばそれがPerlだよねみたいな部分があるのじゃないかと思った(がまぁそれは言い過ぎか)。</p>

<p>個人的にはPerlの話も聞けて、Perl Mongerに向けたという角度で捉えられた他の言語の話も聞けて大満足であった。</p>

<hr />

<h2>記憶に残ったトーク</h2>

<ul>
<li><p><a href="http://www.slideshare.net/tsuyoshitorii5/yapcasia2014-2-public?ref=http://sssslide.com/www.slideshare.net/tsuyoshitorii5/yapcasia2014-2-public">作られては消えていく、泡のように儚いクラスタの運用話</a></p>

<ul>
<li><p>放送時間帯にガツンと負荷がかかるTV案件を運用する上でのインフラなどの運用の話。</p></li>
<li><p>24時間365時間リソースを稼働させるWebサービスなどとは違い、こういったTV案件というのはAWSを使う上でとてもうまい使い方の事例だと感心した。最近AWSを触ってるけど、デプロイではAMIを作ってそれをCoudFormationで〜といところらへんの話はその手があったかととても参考になった。</p></li>
</ul>
</li>
<li><p><a href="https://speakerdeck.com/tcnksm/komandorainturunituiteyu-rutokinipu-falseyu-rukoto-number-yapcasia">コマンドラインツールについて語るときに僕の語ること</a></p>

<ul>
<li><p>最近Goを少し触っているので<code>cli-init</code>、<code>gox</code>、<code>ghr</code>を活用したくなった。</p></li>
<li><p>後からスライド見直して改めて思ったけど、すごく丁寧にスライドが作られているように思う。helpやmanの位置付けやRDDの話がとてもわかりやすい。そこまで特別新しいことを言っているわけではないし、どこかで聞いたことあるような話ではあるんだけど、改めて明確に言語化して発表してもらったことにはとても価値が有ったと思う。</p></li>
</ul>
</li>
<li><p>DeNAが歩んだdeploy自動化への道</p>

<ul>
<li>「全ては出荷プロセスに現れる」「反復されたプロセスは信頼に足る」という部分が強く記憶に残った。</li>
</ul>
</li>
<li><p>Plack for Fun and Profit (But Mostly Profit)</p>

<ul>
<li><p><a href="http://www.booking.com/index.ja.html">Booking.com</a>の中の人の話。というかBooking.com今日知ったけど最高にクールだ&hellip;。次旅行するとき使ってみたい。</p></li>
<li><p>よくSIerを揶揄するけど、「利益を生み出すコードは消すことが出来ない」の一言はまさにそれだと感じた。その利益を生み出すコード・ビジネスモデルが10年どころか40年とか前のものでもそれは同じだろうと。</p></li>
<li><p>ビジネスでやる以上、自身が今いくら利益を生んでいるかというのは避けられないし(避けたい&hellip;)、常に考える必要が有る(考えたくない&hellip;)ことを忘れてはならないと思った。</p></li>
</ul>
</li>
<li><p>そんなにビッグでもないデータ処理手法の話</p>

<ul>
<li><p>最近HadoopやらStormやらを少しだけ触っていたが、とてもわかりやすかった。</p></li>
<li><p>メッセージや思考がとても明確で、トークのターゲットが何かということや、データ分析をする上で何が大切でどう考えれば良いかという部分がすごくしっくりきた。もっと突っ込んだ話も今後是非伺ってみたい。</p></li>
</ul>
</li>
</ul>


<hr />

<h2>ギターヒーローって言いたかっただけ</h2>

<p>個人的なことを言うと、最近はがっつりPerlを書くことっていうのは前より減っているんだけど、それでもやはりあんだけ数々の素晴らしい発表を目の当たりにすると、やはりPerlを書きたくなるしOSSに貢献したくなる。</p>

<p>音楽をやっていた身からすると、なんだかこれってギターヒーローの演奏を見て憧れるギターキッズのようだなとふと感じた。</p>

<p>最後のキーノート、typesterさんの話を聞いていて、自分は今後どうしたいのだろうというのも考えさせられた。</p>

<p>単純に面白いだけでなく、技術的な知見を得られ、そして自身を省みることができるYAPC::Asia Tokyo、来年も是非開催をよろしくお願いしたいところ。</p>

<p>運営の方々はじめ、皆様ありがとうございました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arcadiaの小説ランキング出すやつ作った]]></title>
    <link href="http://blog.digital-bot.com/blog/2014/07/27/arcadia/"/>
    <updated>2014-07-27T23:41:49+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2014/07/27/arcadia</id>
    <content type="html"><![CDATA[<p><a href="http://www.mai-net.net/">Arcadia</a>というWeb小説界では有名なサイトがあるけど、ランキング表示とかはどうにもしてくれないので前から地味に困っていた。</p>

<p>最近はあんまりArcadiaはあんまり活発じゃないんだけど、今回、過去に読んでいたやつを読み返したくなったのにさがすのがだるかったのでPVや記事数/乾燥数でソートして表示してくれるやつを作った。</p>

<p>あんまり最近書いてなかったけど、こういうのは慣れ親しんだPerlでということで、使ったのはPerl。単なる<code>hoge.pl</code>としてスクリプトにしたり、<strong>gist</strong>にあげても良かったんだけど、勉強も兼ねて<a href="https://github.com/tokuhirom/Minilla">Minilla</a>でCPANに上げられるような作りのものを作った。</p>

<h2>Git Repo</h2>

<ul>
<li><a href="https://github.com/digitalbot/App-ArcadiaRank">App-ArcadiaRank</a></li>
</ul>


<p>普通に<code>cpanm</code>したら(CPANには上げてないけど)、<code>arcadiarank</code>コマンドが使えるようになるからそれするといい感じにターミナル上で現時点でのArcadiaの小説ランキングがわかる。現時点ではオリジナルしか対応してないけど、やる気があれば色々拡張したりパフォーマンス挙げたりするかも。</p>

<h2>exsample</h2>

<p>```
$ arcadiarank &mdash;help
Usage:</p>

<pre><code>arcadiarank [options]

options:
    --limit,-l count   Control entries limit.
    --compact,-c       Show compact results.
    --precision,-p     Calc precision.
    --version,-v       Show version of this app.
    --help,-h          Show this help messages.
</code></pre>

<p>$ arcadiarank</p>

<p>  rank: 1 (pv: 3452875)</p>

<pre><code>  title : ミルク多めのブラックコーヒー（似非中世ファンタジー・ハーレム系）
  author: かおらて
  pages : 100
</code></pre>

<hr />

<p>  rank: 2 (pv: 2759327)</p>

<pre><code>  title : オーバーロード（オリジナル異世界転移最強もの）
  author: 丸山くがね
  pages : 60
</code></pre>

<hr />

<p>  rank: 3 (pv: 2421761)</p>

<pre><code>  title : 幻想立志転生伝(転生モノ)　完結
  author: BA-2
  pages : 85
</code></pre>

<hr />

<p>  rank: 4 (pv: 1606542)</p>

<pre><code>  title : 腕白関白(完結)
  author: そる
  pages : 41
</code></pre>

<hr />

<p>  rank: 5 (pv: 1352604)</p>

<pre><code>  title : 自衛隊　彼の地にて、斯く戦えり
  author: とどく＝たくさん
  pages : 5
</code></pre>

<hr />

<p>  rank: 6 (pv: 1129442)</p>

<pre><code>  title : 【異世界トリップ・建国】黄金の帝国【完結】
  author: 行
  pages : 65
</code></pre>

<hr />

<p>  rank: 7 (pv: 1119247)</p>

<pre><code>  title : オリジナル転生物（題名は続きを上げてから変更予定）
  author: 凛
  pages : 50
</code></pre>

<hr />

<p>  rank: 8 (pv: 1117904)</p>

<pre><code>  title : 短編更新【完結】さようなら竜生　こんにちは人生（竜→人間転生　主人公最強　......
  author: スペ
  pages : 65
</code></pre>

<hr />

<p>  rank: 9 (pv: 1056110)</p>

<pre><code>  title : 異世界に来たけど至って普通に喫茶店とかやってますが何か問題でも？
  author: 風見鶏
  pages : 23
</code></pre>

<hr />

<p>  rank: 10 (pv: 1046588)</p>

<pre><code>  title : 【正式採用決定】（末期戦モノ）幼女戦記Tuez-les tous, Dieu reconnaitra les siens
  author: カルロ・ゼン
  pages : 123
</code></pre>

<hr />

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mavericksに入らなくて困ってたdbd-mysqlが入った]]></title>
    <link href="http://blog.digital-bot.com/blog/2014/02/06/can-install-dbd-mysql/"/>
    <updated>2014-02-06T22:54:48+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2014/02/06/can-install-dbd-mysql</id>
    <content type="html"><![CDATA[<p><a href="http://blog.digital-bot.com/blog/2013/11/02/dbd-mysql-on-mavericks/">以前の記事</a>
で入らなくて困ってたDBD::mysqlがインストールできた．</p>

<p>DBD::mysqlのバージョンアップのおかげかmysqlのバージョンアップのおかげか。</p>

<p>過去の記事からとくにこちらではなんもしてないけど、入ってよかった。</p>

<h2>とりあえずログ</h2>

<!-- more -->


<p><div><script src='https://gist.github.com/8843600.js'></script>
<script type="text/javascript">$("td.line-numbers").remove();</script>
<noscript><pre><code>[digitalbot@PC-0111:~]$ cpanm DBD::mysql -v
cpanm (App::cpanminus) 1.7001 on perl 5.018001 built for darwin-thread-multi-2level
Work directory is /Users/digitalbot/.cpanm/work/1391579356.37018
You have make /usr/bin/make
You have LWP 6.05
You have /usr/bin/tar: bsdtar 2.8.3 - libarchive 2.8.3
You have /usr/bin/unzip
Searching DBD::mysql on cpanmetadb ...
--&gt; Working on DBD::mysql
Fetching http://www.cpan.org/authors/id/C/CA/CAPTTOFU/DBD-mysql-4.026.tar.gz ... OK
Unpacking DBD-mysql-4.026.tar.gz
x DBD-mysql-4.026/
x DBD-mysql-4.026/META.yml
x DBD-mysql-4.026/Makefile.PL
x DBD-mysql-4.026/myld
x DBD-mysql-4.026/Makefile.PL.embedded
x DBD-mysql-4.026/t/
x DBD-mysql-4.026/t/65types.t
x DBD-mysql-4.026/t/70takeimp.t
x DBD-mysql-4.026/t/51bind_type_guessing.t
x DBD-mysql-4.026/t/71impdata.t
x DBD-mysql-4.026/t/mysql.dbtest
x DBD-mysql-4.026/t/00base.t
x DBD-mysql-4.026/t/85init_command.t
x DBD-mysql-4.026/t/40listfields.t
x DBD-mysql-4.026/t/rt83494-quotes-comments.t
x DBD-mysql-4.026/t/76multi_statement.t
x DBD-mysql-4.026/t/87async.t
x DBD-mysql-4.026/t/40catalog.t
x DBD-mysql-4.026/t/52comment.t
x DBD-mysql-4.026/t/rt86153-reconnect-fail-memory.t
x DBD-mysql-4.026/t/31insertid.t
x DBD-mysql-4.026/t/60leaks.t
x DBD-mysql-4.026/t/40types.t
x DBD-mysql-4.026/t/75supported_sql.t
x DBD-mysql-4.026/t/65segfault.t
x DBD-mysql-4.026/t/43count_params.t
x DBD-mysql-4.026/t/pod.t
x DBD-mysql-4.026/t/rt85919-fetch-lost-connection.t
x DBD-mysql-4.026/t/53comment.t
x DBD-mysql-4.026/t/41blobs_prepare.t
x DBD-mysql-4.026/t/29warnings.t
x DBD-mysql-4.026/t/81procs.t
x DBD-mysql-4.026/t/35prepare.t
x DBD-mysql-4.026/t/99_bug_server_prepare_blob_null.t
x DBD-mysql-4.026/t/20createdrop.t
x DBD-mysql-4.026/t/40server_prepare.t
x DBD-mysql-4.026/t/40keyinfo.t
x DBD-mysql-4.026/t/rt25389-bin-case.t
x DBD-mysql-4.026/t/rt50304-column_info_parentheses.t
x DBD-mysql-4.026/t/50commit.t
x DBD-mysql-4.026/t/25lockunlock.t
x DBD-mysql-4.026/t/manifest.t
x DBD-mysql-4.026/t/40nulls.t
x DBD-mysql-4.026/t/mysql.mtest
x DBD-mysql-4.026/t/40bindparam2.t
x DBD-mysql-4.026/t/40nulls_prepare.t
x DBD-mysql-4.026/t/15reconnect.t
x DBD-mysql-4.026/t/lib.pl
x DBD-mysql-4.026/t/50chopblanks.t
x DBD-mysql-4.026/t/89async-method-check.t
x DBD-mysql-4.026/t/32insert_error.t
x DBD-mysql-4.026/t/10connect.t
x DBD-mysql-4.026/t/40blobs.t
x DBD-mysql-4.026/t/42bindparam.t
x DBD-mysql-4.026/t/80procs.t
x DBD-mysql-4.026/t/41bindparam.t
x DBD-mysql-4.026/t/rt91715.t
x DBD-mysql-4.026/t/88async-multi-stmts.t
x DBD-mysql-4.026/t/40bindparam.t
x DBD-mysql-4.026/t/90no-async.t
x DBD-mysql-4.026/t/30insertfetch.t
x DBD-mysql-4.026/t/40numrows.t
x DBD-mysql-4.026/t/40server_prepare_error.t
x DBD-mysql-4.026/t/35limit.t
x DBD-mysql-4.026/t/55utf8.t
x DBD-mysql-4.026/t/91errcheck.t
x DBD-mysql-4.026/t/86_bug_36972.t
x DBD-mysql-4.026/eg/
x DBD-mysql-4.026/eg/proc_example2.pl
x DBD-mysql-4.026/eg/bug30033pg.pl
x DBD-mysql-4.026/eg/bigint_quotes.pl
x DBD-mysql-4.026/eg/bug30033.pl
x DBD-mysql-4.026/eg/decimal_test.pl
x DBD-mysql-4.026/eg/proc_example3.pl
x DBD-mysql-4.026/eg/bug14979.pl
x DBD-mysql-4.026/eg/proc_example2b.pl
x DBD-mysql-4.026/eg/proc_example1.pl
x DBD-mysql-4.026/eg/proc_example2a.pl
x DBD-mysql-4.026/eg/bug21028.pl
x DBD-mysql-4.026/eg/issue21946.pl
x DBD-mysql-4.026/eg/proc_example4.pl
x DBD-mysql-4.026/eg/prepare_memory_usage.pl
x DBD-mysql-4.026/MANIFEST
x DBD-mysql-4.026/dbdimp.c
x DBD-mysql-4.026/README.pod
x DBD-mysql-4.026/mysql.xs
x DBD-mysql-4.026/TODO
x DBD-mysql-4.026/constants.h
x DBD-mysql-4.026/ChangeLog
x DBD-mysql-4.026/MANIFEST.SKIP
x DBD-mysql-4.026/lib/
x DBD-mysql-4.026/lib/DBD/
x DBD-mysql-4.026/lib/DBD/mysql/
x DBD-mysql-4.026/lib/DBD/mysql/INSTALL.pod
x DBD-mysql-4.026/lib/DBD/mysql/GetInfo.pm
x DBD-mysql-4.026/lib/DBD/mysql.pm
x DBD-mysql-4.026/lib/Bundle/
x DBD-mysql-4.026/lib/Bundle/DBD/
x DBD-mysql-4.026/lib/Bundle/DBD/mysql.pm
x DBD-mysql-4.026/dbdimp.h
Entering DBD-mysql-4.026
Checking configure dependencies from META.yml
Checking if you have DBI 1.08 ... Yes (1.631)
Running Makefile.PL
Configuring DBD-mysql-4.026 ... 

PLEASE NOTE:

For &#39;make test&#39; to run properly, you must ensure that the
database user &#39;digitalbot&#39; can connect to your MySQL server
and has the proper privileges that these tests require such
as &#39;drop table&#39;, &#39;create table&#39;, &#39;drop procedure&#39;, &#39;create procedure&#39;
as well as others.

mysql&gt; grant all privileges on test.* to &#39;digitalbot&#39;@&#39;localhost&#39; identified by &#39;s3kr1t&#39;;

You can also optionally set the user to run &#39;make test&#39; with:

perl Makefile.PL --testuser=username

I will use the following settings for compiling and testing:

  cflags        (mysql_config) = -I/usr/local/Cellar/mysql/5.6.16/include/mysql  -Os -g -fno-strict-aliasing
  embedded      (mysql_config) = 
  ldflags       (mysql_config) = 
  libs          (mysql_config) = -L/usr/local/Cellar/mysql/5.6.16/lib -lmysqlclient
  mysql_config  (guessed     ) = mysql_config
  nocatchstderr (default     ) = 0
  nofoundrows   (default     ) = 0
  ssl           (guessed     ) = 0
  testdb        (default     ) = test
  testhost      (default     ) = 
  testpassword  (default     ) = 
  testport      (default     ) = 
  testsocket    (default     ) = 
  testuser      (guessed     ) = digitalbot

To change these settings, see &#39;perl Makefile.PL --help&#39; and
&#39;perldoc DBD::mysql::INSTALL&#39;.

Checking if your kit is complete...
Warning: the following files are missing in your kit:
	META.json
Please inform the author.
Using DBI 1.631 (for perl 5.018001 on darwin-thread-multi-2level) installed in /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI/
Generating a Unix-style Makefile
Writing Makefile for DBD::mysql
Writing MYMETA.yml and MYMETA.json
OK
Checking dependencies from MYMETA.json ...
Checking if you have Test::Deep 0 ... Yes (0.112)
Checking if you have Data::Dumper 0 ... Yes (2.145)
Checking if you have DBI 1.08 ... Yes (1.631)
Checking if you have Test::More 0 ... Yes (1.001002)
Building and testing DBD-mysql-4.026 ... cp README.pod blib/lib/DBD/README.pod
cp lib/DBD/mysql.pm blib/lib/DBD/mysql.pm
cp lib/Bundle/DBD/mysql.pm blib/lib/Bundle/DBD/mysql.pm
cp lib/DBD/mysql/INSTALL.pod blib/lib/DBD/mysql/INSTALL.pod
cp lib/DBD/mysql/GetInfo.pm blib/lib/DBD/mysql/GetInfo.pm
Running Mkbootstrap for DBD::mysql ()
chmod 644 mysql.bs
cc -c  -I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI -I/usr/local/Cellar/mysql/5.6.16/include/mysql  -Os -g -fno-strict-aliasing -DDBD_MYSQL_INSERT_ID_IS_GOOD -g  -fno-common -DPERL_DARWIN -arch x86_64 -fPIC -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -g -pipe -Os   -DVERSION=\&quot;4.026\&quot; -DXS_VERSION=\&quot;4.026\&quot;  &quot;-I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/darwin-thread-multi-2level/CORE&quot;   dbdimp.c
dbdimp.c:3676:22: warning: incompatible pointer types assigning to &#39;my_bool *&#39; (aka &#39;char *&#39;) from &#39;bool *&#39;
      [-Wincompatible-pointer-types]
      buffer-&gt;is_null= &amp;(fbh-&gt;is_null);
                     ^ ~~~~~~~~~~~~~~~
1 warning generated.
/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 -p -e &quot;s/~DRIVER~/mysql/g&quot; /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI/Driver.xst &gt; mysql.xsi
/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/ExtUtils/xsubpp  -typemap /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/ExtUtils/typemap  mysql.xs &gt; mysql.xsc &amp;&amp; mv mysql.xsc mysql.c
Warning: duplicate function definition &#39;do&#39; detected in mysql.xs, line 242
Warning: duplicate function definition &#39;rows&#39; detected in mysql.xs, line 754
cc -c  -I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI -I/usr/local/Cellar/mysql/5.6.16/include/mysql  -Os -g -fno-strict-aliasing -DDBD_MYSQL_INSERT_ID_IS_GOOD -g  -fno-common -DPERL_DARWIN -arch x86_64 -fPIC -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -g -pipe -Os   -DVERSION=\&quot;4.026\&quot; -DXS_VERSION=\&quot;4.026\&quot;  &quot;-I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/darwin-thread-multi-2level/CORE&quot;   mysql.c
mysql.xs:933:38: warning: format specifies type &#39;int&#39; but the argument has type &#39;SV *&#39; (aka &#39;struct sv *&#39;) [-Wformat]
                croak(&quot;Unknown SQL Info type: %i&quot;,dbh);
                                              ~~  ^~~
1 warning generated.
rm -f blib/arch/auto/DBD/mysql/mysql.bundle
LD_RUN_PATH=&quot;/usr/local/Cellar/mysql/5.6.16/lib&quot; /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 myld env MACOSX_DEPLOYMENT_TARGET=10.3 cc -arch x86_64  -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector dbdimp.o mysql.o  -o blib/arch/auto/DBD/mysql/mysql.bundle 	\
	   -L/usr/local/Cellar/mysql/5.6.16/lib -lmysqlclient  	\
	  
chmod 755 blib/arch/auto/DBD/mysql/mysql.bundle
/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 -MExtUtils::Command::MM -e &#39;cp_nonempty&#39; -- mysql.bs blib/arch/auto/DBD/mysql/mysql.bs 644
Manifying blib/man3/DBD::README.3
Manifying blib/man3/Bundle::DBD::mysql.3
Manifying blib/man3/DBD::mysql.3
Manifying blib/man3/DBD::mysql::INSTALL.3
Running Mkbootstrap for DBD::mysql ()
chmod 644 mysql.bs
PERL_DL_NONLAZY=1 /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 &quot;-MExtUtils::Command::MM&quot; &quot;-MTest::Harness&quot; &quot;-e&quot; &quot;undef *Test::Harness::Switches; test_harness(0, &#39;blib/lib&#39;, &#39;blib/arch&#39;)&quot; t/*.t
t/00base.t ........................... ok   
t/10connect.t ........................ ok   
t/15reconnect.t ...................... ok     
t/20createdrop.t ..................... ok   
t/25lockunlock.t ..................... ok     
t/29warnings.t ....................... ok     
t/30insertfetch.t .................... ok     
t/31insertid.t ....................... ok     
t/32insert_error.t ................... ok   
t/35limit.t .......................... ok       
t/35prepare.t ........................ ok     
t/40bindparam.t ...................... ok     
t/40bindparam2.t ..................... ok     
t/40blobs.t .......................... ok     
t/40catalog.t ........................ ok     
t/40keyinfo.t ........................ ok   
t/40listfields.t ..................... ok     
t/40nulls.t .......................... ok     
t/40nulls_prepare.t .................. ok     
t/40numrows.t ........................ ok     
t/40server_prepare.t ................. ok     
t/40server_prepare_error.t ........... ok   
t/40types.t .......................... ok    
t/41bindparam.t ...................... ok     
t/41blobs_prepare.t .................. ok     
t/42bindparam.t ...................... ok     
t/43count_params.t ................... ok     
t/50chopblanks.t ..................... ok     
t/50commit.t ......................... ok     
t/51bind_type_guessing.t ............. ok     
t/52comment.t ........................ ok     
t/53comment.t ........................ ok     
t/55utf8.t ........................... ok     
t/60leaks.t .......................... skipped: Skip $ENV{EXTENDED_TESTING} is not set
t/65segfault.t ....................... ok   
t/65types.t .......................... ok     
t/70takeimp.t ........................ ok     
t/71impdata.t ........................ ok     
t/75supported_sql.t .................. ok     
t/76multi_statement.t ................ 1/25 # Testing multicall against SQL_DBMS_VER: 5.6.16-log
t/76multi_statement.t ................ ok     
t/80procs.t .......................... ok     
t/81procs.t .......................... ok     
t/85init_command.t ................... ok   
t/86_bug_36972.t ..................... ok     
t/87async.t .......................... ok     
t/88async-multi-stmts.t .............. ok   
t/89async-method-check.t ............. ok       
t/90no-async.t ....................... skipped: Async support was built into this version of DBD::mysql
t/91errcheck.t ....................... ok   
t/99_bug_server_prepare_blob_null.t .. ok     
t/manifest.t ......................... skipped: these tests are for release testing
t/pod.t .............................. skipped: Test::Pod 1.00 required for testing POD
t/rt25389-bin-case.t ................. ok   
t/rt50304-column_info_parentheses.t .. ok   
t/rt83494-quotes-comments.t .......... ok   
t/rt85919-fetch-lost-connection.t .... ok   
t/rt86153-reconnect-fail-memory.t .... skipped: Skip $ENV{EXTENDED_TESTING} is not set
t/rt91715.t .......................... ok   
All tests successful.
Files=58, Tests=1312, 34 wallclock secs ( 0.39 usr  0.14 sys +  4.90 cusr  0.66 csys =  6.09 CPU)
Result: PASS
Files found in blib/arch: installing files in blib/lib into architecture dependent library tree
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBD/mysql/mysql.bundle
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/Bundle/DBD/mysql.pm
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/DBD/mysql.pm
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/DBD/README.pod
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/DBD/mysql/GetInfo.pm
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/DBD/mysql/INSTALL.pod
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/man/man3/Bundle::DBD::mysql.3
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/man/man3/DBD::mysql.3
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/man/man3/DBD::mysql::INSTALL.3
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/man/man3/DBD::README.3
Appending installation info to /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/darwin-thread-multi-2level/perllocal.pod
OK
Successfully installed DBD-mysql-4.026
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/.meta/DBD-mysql-4.026/install.json
Installing /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/.meta/DBD-mysql-4.026/MYMETA.json
1 distribution installed
</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DBD::mysqlがMySQL5.6、OS X Mavericksに入らない]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/11/02/dbd-mysql-on-mavericks/"/>
    <updated>2013-11-02T04:03:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/11/02/dbd-mysql-on-mavericks</id>
    <content type="html"><![CDATA[<hr />

<h4>※2014/02/06</h4>

<p><a href="//blog.digital-bot.com/blog/2014/02/06/can-install-dbd-mysql/">入った</a></p>

<hr />

<p><a href="https://twitter.com/kskexit/status/396160572351205376">https://twitter.com/kskexit/status/396160572351205376</a>">https://twitter.com/kskexit/status/396160572351205376">https://twitter.com/kskexit/status/396160572351205376</a></a></p>

<p>MacOS 10.9にしたiMacでもPerlとMySQLを使った開発がしたくなったのだが、DBD::mysqlがうまく入らなくてこまってる。あと、MySQL自体をHomebrewから入れるときに少し躓いたからそのこともメモとして残しておく。</p>

<ul>
<li><p>環境</p>

<ul>
<li><p>OS X Mavericks (SnowLeopardからアップデート、過去に一度mysqlのdmgインストール歴有り)</p></li>
<li><p>MySQL5.6 (by Homebrew)</p></li>
<li><p>Perl5.18.1 (by plenv)</p></li>
</ul>
</li>
</ul>


<!-- more -->


<h2>MySQL5.6</h2>

<pre><code>$ brew install mysql
</code></pre>

<p>これでmysql自体は入るのだが、恐らくSnowLeorpardからアップデートした影響があり、<code>/etc/my.cnf</code>がmysql5.6で扱えないオプションを含んでいて起動ができない。具体的には</p>

<pre><code>$ unset TMPDIR
$ mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp
</code></pre>

<p>これに失敗する。しょうがないからログをみながら<code>/etc/my.cnf</code>の中の怒られているオプションに<code>loose-</code>をつけていく<sup id='fnref:1'><a href='#fn:1' rel='footnote'>1</a></sup>。<code>/usr/local/etc/my.cnf</code>に5.6に対応してる<code>my.cnf</code>をちゃんと置いたんだけど、どうやら<code>/etc/my.cnf</code>も見ているようで、そっちの中のエラー箇所を対応する必要があった。</p>

<p>まぁそんなこんなしてると</p>

<pre><code>$ mysql.server start
</code></pre>

<p>ができるようになるので、あとはとりあえずrootのパスワードだとかセキュリティの設定をすればOK<sup id='fnref:2'><a href='#fn:2' rel='footnote'>2</a></sup>。</p>

<h2>DBD::mysql</h2>

<p>普通に</p>

<pre><code>$ cpanm DBI
$ cpanm DBD::mysql
</code></pre>

<p>したわけだけど、DBIはうまく入ったみたいだけどDBD::mysqlのテストでコケる。テストでコケるだけじゃなくてなんか他にも<code>clang</code>がcレベルのエラーを吐いてる。正直コレにはこまってて未だに解決してない。誰か解決策がわかるならおしえてほしい。<code>cpanm --look</code>して環境変数いじったりとかしてみたけど改善されなかった。</p>

<p>エラーログのgistを載せておこうと思う。</p>

<p><div><script src='https://gist.github.com/7261559.js'></script>
<script type="text/javascript">$("td.line-numbers").remove();</script>
<noscript><pre><code>$ cpanm DBD::mysql -v
cpanm (App::cpanminus) 1.7001 on perl 5.018001 built for darwin-thread-multi-2level
Work directory is /Users/digitalbot/.cpanm/work/1383286511.59902
You have make /usr/bin/make
You have LWP 6.05
You have /usr/bin/tar: bsdtar 2.8.3 - libarchive 2.8.3
You have /usr/bin/unzip
Searching DBD::mysql on cpanmetadb ...
--&gt; Working on DBD::mysql
Fetching http://www.cpan.org/authors/id/C/CA/CAPTTOFU/DBD-mysql-4.024.tar.gz ... OK
Unpacking DBD-mysql-4.024.tar.gz
x DBD-mysql-4.024/
x DBD-mysql-4.024/mysql.bs
x DBD-mysql-4.024/pm_to_blib
x DBD-mysql-4.024/MYMETA.yml
x DBD-mysql-4.024/Makefile.PL
x DBD-mysql-4.024/README.OSX
x DBD-mysql-4.024/MANIFEST.SKIP
x DBD-mysql-4.024/mysql.xs
x DBD-mysql-4.024/myld
x DBD-mysql-4.024/t/
x DBD-mysql-4.024/t/40nulls_prepare.t
x DBD-mysql-4.024/t/60leaks.t
x DBD-mysql-4.024/t/55utf8.t
x DBD-mysql-4.024/t/40keyinfo.t
x DBD-mysql-4.024/t/50chopblanks.t
x DBD-mysql-4.024/t/mem_leak.pl
x DBD-mysql-4.024/t/42bindparam.t
x DBD-mysql-4.024/t/32insert_error.t
x DBD-mysql-4.024/t/85init_command.t
x DBD-mysql-4.024/t/87async.t
x DBD-mysql-4.024/t/pod.t
x DBD-mysql-4.024/t/40numrows.t
x DBD-mysql-4.024/t/65types.t
x DBD-mysql-4.024/t/81procs.t
x DBD-mysql-4.024/t/40server_prepare_error.t
x DBD-mysql-4.024/t/40listfields.t
x DBD-mysql-4.024/t/31insertid.t
x DBD-mysql-4.024/t/40catalog.t
x DBD-mysql-4.024/t/50commit.t
x DBD-mysql-4.024/t/70takeimp.t
x DBD-mysql-4.024/t/52comment.t
x DBD-mysql-4.024/t/40bindparam2.t
x DBD-mysql-4.024/t/86_bug_36972.t
x DBD-mysql-4.024/t/10connect.t
x DBD-mysql-4.024/t/76multi_statement.t
x DBD-mysql-4.024/t/mysql.mtest
x DBD-mysql-4.024/t/30insertfetch.t
x DBD-mysql-4.024/t/53comment.t
x DBD-mysql-4.024/t/lib.pl
x DBD-mysql-4.024/t/29warnings.t
x DBD-mysql-4.024/t/80procs.t
x DBD-mysql-4.024/t/20createdrop.t
x DBD-mysql-4.024/t/88async-multi-stmts.t
x DBD-mysql-4.024/t/75supported_sql.t
x DBD-mysql-4.024/t/99_bug_server_prepare_blob_null.t
x DBD-mysql-4.024/t/35prepare.t
x DBD-mysql-4.024/t/25lockunlock.t
x DBD-mysql-4.024/t/90no-async.t
x DBD-mysql-4.024/t/15reconnect.t
x DBD-mysql-4.024/t/43count_params.t
x DBD-mysql-4.024/t/89async-method-check.t
x DBD-mysql-4.024/t/40server_prepare.t
x DBD-mysql-4.024/t/35limit.t
x DBD-mysql-4.024/t/40blobs.t
x DBD-mysql-4.024/t/41bindparam.t
x DBD-mysql-4.024/t/00base.t
x DBD-mysql-4.024/t/40nulls.t
x DBD-mysql-4.024/t/51bind_type_guessing.t
x DBD-mysql-4.024/t/71impdata.t
x DBD-mysql-4.024/t/40types.t
x DBD-mysql-4.024/t/65segfault.t
x DBD-mysql-4.024/t/41blobs_prepare.t
x DBD-mysql-4.024/t/mysql.dbtest
x DBD-mysql-4.024/t/40bindparam.t
x DBD-mysql-4.024/t/91errcheck.t
x DBD-mysql-4.024/dbdimp.o
x DBD-mysql-4.024/constants.h
x DBD-mysql-4.024/pod2htmd.tmp
x DBD-mysql-4.024/mysql.c
x DBD-mysql-4.024/META.yml
x DBD-mysql-4.024/dbdimp.c
x DBD-mysql-4.024/ChangeLog
x DBD-mysql-4.024/Makefile.PL.embedded
x DBD-mysql-4.024/mysql.o
x DBD-mysql-4.024/eg/
x DBD-mysql-4.024/eg/proc_example2.pl
x DBD-mysql-4.024/eg/bug21028.pl
x DBD-mysql-4.024/eg/proc_example2a.pl
x DBD-mysql-4.024/eg/bug14979.pl
x DBD-mysql-4.024/eg/proc_example4.pl
x DBD-mysql-4.024/eg/bug30033pg.pl
x DBD-mysql-4.024/eg/proc_example1.pl
x DBD-mysql-4.024/eg/proc_example2b.pl
x DBD-mysql-4.024/eg/bigint_quotes.pl
x DBD-mysql-4.024/eg/bug30033.pl
x DBD-mysql-4.024/eg/decimal_test.pl
x DBD-mysql-4.024/eg/prepare_memory_usage.pl
x DBD-mysql-4.024/eg/issue21946.pl
x DBD-mysql-4.024/eg/proc_example3.pl
x DBD-mysql-4.024/pod2htmi.tmp
x DBD-mysql-4.024/README
x DBD-mysql-4.024/TODO
x DBD-mysql-4.024/dbdimp.h
x DBD-mysql-4.024/lib/
x DBD-mysql-4.024/lib/DBD/
x DBD-mysql-4.024/lib/DBD/mysql.pm
x DBD-mysql-4.024/lib/DBD/mysql/
x DBD-mysql-4.024/lib/DBD/mysql/GetInfo.pm
x DBD-mysql-4.024/lib/DBD/mysql/INSTALL.pod
x DBD-mysql-4.024/lib/Bundle/
x DBD-mysql-4.024/lib/Bundle/DBD/
x DBD-mysql-4.024/lib/Bundle/DBD/mysql.pm
x DBD-mysql-4.024/INSTALL.html
x DBD-mysql-4.024/MANIFEST
x DBD-mysql-4.024/mysql.xsi
Entering DBD-mysql-4.024
Checking configure dependencies from META.yml
Checking if you have DBI 1.08 ... Yes (1.630)
Running Makefile.PL
Configuring DBD-mysql-4.024 ...

PLEASE NOTE:

For &#39;make test&#39; to run properly, you must ensure that the
database user &#39;digitalbot&#39; can connect to your MySQL server
and has the proper privileges that these tests require such
as &#39;drop table&#39;, &#39;create table&#39;, &#39;drop procedure&#39;, &#39;create procedure&#39;
as well as others.

mysql&gt; grant all privileges on test.* to &#39;digitalbot&#39;@&#39;localhost&#39; identified by &#39;s3kr1t&#39;;

You can also optionally set the user to run &#39;make test&#39; with:

perl Makefile.PL --testuser=username

I will use the following settings for compiling and testing:

  cflags        (mysql_config) = -I/usr/local/Cellar/mysql/5.6.13/include  -Os -g -fno-strict-aliasing
  embedded      (mysql_config) =
  ldflags       (mysql_config) =
  libs          (mysql_config) = -L/usr/local/Cellar/mysql/5.6.13/lib -lmysqlclient
  mysql_config  (guessed     ) = mysql_config
  nocatchstderr (default     ) = 0
  nofoundrows   (default     ) = 0
  ssl           (guessed     ) = 0
  testdb        (default     ) = test
  testhost      (default     ) =
  testpassword  (default     ) =
  testport      (default     ) =
  testsocket    (default     ) =
  testuser      (guessed     ) = digitalbot

To change these settings, see &#39;perl Makefile.PL --help&#39; and
&#39;perldoc INSTALL&#39;.

Checking if your kit is complete...
Warning: the following files are missing in your kit:
	MYMETA.json
Please inform the author.
Using DBI 1.63 (for perl 5.018001 on darwin-thread-multi-2level) installed in /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI/
Writing Makefile for DBD::mysql
Writing MYMETA.yml and MYMETA.json
OK
Checking dependencies from MYMETA.json ...
Checking if you have Test::Deep 0 ... Yes (0.110)
Checking if you have Data::Dumper 0 ... Yes (2.145)
Checking if you have Test::More 0 ... Yes (0.98)
Checking if you have DBI 1.08 ... Yes (1.630)
Building and testing DBD-mysql-4.024 ... cp lib/Bundle/DBD/mysql.pm blib/lib/Bundle/DBD/mysql.pm
cp lib/DBD/mysql/GetInfo.pm blib/lib/DBD/mysql/GetInfo.pm
cp lib/DBD/mysql.pm blib/lib/DBD/mysql.pm
cp lib/DBD/mysql/INSTALL.pod blib/lib/DBD/mysql/INSTALL.pod
cc -c  -I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI -I/usr/local/Cellar/mysql/5.6.13/include  -Os -g -fno-strict-aliasing -DDBD_MYSQL_INSERT_ID_IS_GOOD -g  -fno-common -DPERL_DARWIN -arch x86_64 -fPIC -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -g -pipe -Os   -DVERSION=\&quot;4.024\&quot; -DXS_VERSION=\&quot;4.024\&quot;  &quot;-I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/darwin-thread-multi-2level/CORE&quot;   dbdimp.c
dbdimp.c:3651:22: warning: incompatible pointer types assigning to &#39;my_bool *&#39; (aka &#39;char *&#39;) from &#39;bool *&#39;
      [-Wincompatible-pointer-types]
      buffer-&gt;is_null= &amp;(fbh-&gt;is_null);
                     ^ ~~~~~~~~~~~~~~~
1 warning generated.
/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/ExtUtils/xsubpp  -typemap /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/ExtUtils/typemap  mysql.xs &gt; mysql.xsc &amp;&amp; mv mysql.xsc mysql.c
Warning: duplicate function definition &#39;do&#39; detected in mysql.xs, line 244
Warning: duplicate function definition &#39;rows&#39; detected in mysql.xs, line 756
cc -c  -I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/site_perl/5.18.1/darwin-thread-multi-2level/auto/DBI -I/usr/local/Cellar/mysql/5.6.13/include  -Os -g -fno-strict-aliasing -DDBD_MYSQL_INSERT_ID_IS_GOOD -g  -fno-common -DPERL_DARWIN -arch x86_64 -fPIC -DDEBUGGING -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -g -pipe -Os   -DVERSION=\&quot;4.024\&quot; -DXS_VERSION=\&quot;4.024\&quot;  &quot;-I/Users/digitalbot/.anyenv/envs/plenv/versions/5.18/lib/perl5/5.18.1/darwin-thread-multi-2level/CORE&quot;   mysql.c
mysql.xs:935:38: warning: format specifies type &#39;int&#39; but the argument has type &#39;SV *&#39; (aka &#39;struct sv *&#39;) [-Wformat]
                croak(&quot;Unknown SQL Info type: %i&quot;,dbh);
                                              ~~  ^~~
1 warning generated.
Running Mkbootstrap for DBD::mysql ()
chmod 644 mysql.bs
rm -f blib/arch/auto/DBD/mysql/mysql.bundle
LD_RUN_PATH=&quot;/usr/local/Cellar/mysql/5.6.13/lib&quot; /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 myld env MACOSX_DEPLOYMENT_TARGET=10.3 cc -arch x86_64  -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector dbdimp.o mysql.o  -o blib/arch/auto/DBD/mysql/mysql.bundle 	\
	   -L/usr/local/Cellar/mysql/5.6.13/lib -lmysqlclient  	\

chmod 755 blib/arch/auto/DBD/mysql/mysql.bundle
cp mysql.bs blib/arch/auto/DBD/mysql/mysql.bs
chmod 644 blib/arch/auto/DBD/mysql/mysql.bs
Manifying blib/man3/DBD::mysql::INSTALL.3
Manifying blib/man3/DBD::mysql.3
Manifying blib/man3/Bundle::DBD::mysql.3
PERL_DL_NONLAZY=1 /Users/digitalbot/.anyenv/envs/plenv/versions/5.18/bin/perl5.18.1 &quot;-MExtUtils::Command::MM&quot; &quot;-e&quot; &quot;test_harness(0, &#39;blib/lib&#39;, &#39;blib/arch&#39;)&quot; t/*.t
t/00base.t ........................... 1/6 Assertion failed: (PL_valid_types_PVX[SvTYPE(_svcur) &amp; SVt_MASK] || SvTYPE(_svcur) == SVt_REGEXP), function err_hash, file DBI.xs, line 866.
t/00base.t ........................... Failed 1/6 subtests
t/10connect.t ........................ ok
t/15reconnect.t ...................... ok
t/20createdrop.t ..................... ok
t/25lockunlock.t ..................... ok
t/29warnings.t ....................... ok
t/30insertfetch.t .................... ok
t/31insertid.t ....................... ok
t/32insert_error.t ................... ok
t/35limit.t .......................... ok
t/35prepare.t ........................ ok
t/40bindparam.t ...................... ok
t/40bindparam2.t ..................... ok
t/40blobs.t .......................... ok
t/40catalog.t ........................ 1/78 Use of uninitialized value $numTests in concatenation (.) or string at t/lib.pl line 213.
t/40catalog.t ........................ ok
t/40keyinfo.t ........................ ok
t/40listfields.t ..................... ok
t/40nulls.t .......................... ok
t/40nulls_prepare.t .................. ok
t/40numrows.t ........................ ok
t/40server_prepare.t ................. ok
t/40server_prepare_error.t ........... ok
t/40types.t .......................... ok
t/41bindparam.t ...................... ok
t/41blobs_prepare.t .................. ok
t/42bindparam.t ...................... ok
t/43count_params.t ................... ok
t/50chopblanks.t ..................... ok
t/50commit.t ......................... ok
t/51bind_type_guessing.t ............. ok
t/52comment.t ........................ ok
t/53comment.t ........................ ok
t/55utf8.t ........................... ok
t/60leaks.t .......................... skipped: Skip $ENV{SLOW_TESTS} is not set
t/65segfault.t ....................... ok
t/65types.t .......................... ok
t/70takeimp.t ........................ ok
t/71impdata.t ........................ ok
t/75supported_sql.t .................. ok
t/76multi_statement.t ................ 1/25 # Testing multicall against SQL_DBMS_VER: 5.6.13-log
t/76multi_statement.t ................ ok
t/80procs.t .......................... ok
t/81procs.t .......................... ok
t/85init_command.t ................... ok
t/86_bug_36972.t ..................... ok
t/87async.t .......................... ok
t/88async-multi-stmts.t .............. ok
t/89async-method-check.t ............. ok
t/90no-async.t ....................... skipped: Async support was built into this version of DBD::mysql
t/91errcheck.t ....................... ok
t/99_bug_server_prepare_blob_null.t .. ok
t/pod.t .............................. skipped: Test::Pod 1.00 required for testing POD

Test Summary Report
-------------------
t/00base.t                         (Wstat: 6 Tests: 5 Failed: 0)
  Non-zero wait status: 6
  Parse errors: Bad plan.  You planned 6 tests but ran 5.
Files=51, Tests=1265, 27 wallclock secs ( 0.36 usr  0.13 sys +  4.31 cusr  0.64 csys =  5.44 CPU)
Result: FAIL
Failed 1/51 test programs. 0/1265 subtests failed.
make: *** [test_dynamic] Error 255
FAIL
! Installing DBD::mysql failed. See /Users/digitalbot/.cpanm/work/1383286511.59902/build.log for details. Retry with --force to force install it.
</code></pre></noscript></div>
</p>

<p>なんすか</p>

<pre><code>t/00base.t ........................... 1/6 Assertion failed: (PL_valid_types_PVX[SvTYPE(_svcur) &amp; SVt_MASK] || SvTYPE(_svcur) == SVt_REGEXP), function err_hash, file DBI.xs, line 866.
</code></pre>

<p>って。<code>DBI.xs</code>でのエラー？ちょっとそういうのやめてもらいたいのですが。</p>

<hr />

<p><div class="footnotes">
	<ol>
		<li id='fn:1'><p><a href="http://blog.kamipo.net/entry/2013/02/07/234050">MySQL の unknown option エラーはオプションに loose- プレフィックスをつけると回避できる</a>
  <a href='#fnref:1' rev='footnote'>↩</a></p>
</li><li id='fn:2'><p><a href="http://www.karakaram.com/install-mysql56-homebrew">HomebrewでMySQL 5.6をインストール。開発用my.cnfもさらす</a>
<a href='#fnref:2' rev='footnote'>↩</a></p>
</li>
	</ol>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PerlでJSONを出力する。JSONとJSON::Syckの違い]]></title>
    <link href="http://blog.digital-bot.com/blog/2013/11/01/json-cmp/"/>
    <updated>2013-11-01T22:34:00+09:00</updated>
    <id>http://blog.digital-bot.com/blog/2013/11/01/json-cmp</id>
    <content type="html"><![CDATA[<p>PerlでJSONを吐き出す方法、いくつかあるんだけど、どうすればよいか毎回忘れるし、プロジェクトによってJSON::XS使ってたりJSON::Syck使ってたりとまちまちだから、自分なりの方法をここにメモしておく。わりとゆるふわっとしてるので間違いあるかも。</p>

<!-- more -->


<h2>JSONとSyckで同じ出力を得る</h2>

<p><div><script src='https://gist.github.com/7265507.js'></script>
<script type="text/javascript">$("td.line-numbers").remove();</script>
<noscript><pre><code>#!/usr/bin/env perl
use strict;
use warnings;
use feature qw/say/;
use Encode qw//;
use Encode::JavaScript::UCS;
use Data::Dumper;
use JSON qw//;
use JSON::Syck;
use Test::More;

sub _json {
    my @data = @_;
    my $json = JSON-&gt;new-&gt;ascii-&gt;utf8(0)-&gt;encode(\@data);
    $json =~ s/([&lt;&gt;\/\+])/sprintf(&quot;\\u%04x&quot;,ord($1))/eg;
    return $json;
}
sub _syck {
    my @data = @_;
    my $json = Encode::encode(&#39;JavaScript-UCS&#39;, JSON::Syck::Dump(\@data));
    $json =~ s/([&lt;&gt;\/\+])/sprintf(&quot;\\u%04x&quot;,ord($1))/eg;
    return $json;
}

my @members = ({
    age =&gt; 41,
    name =&gt; &#39;[倉持]&#39;,
}, {
    age =&gt; 42,
    name =&gt; &#39;&quot;浅沼&quot;/\/&#39;,
}, {
    age =&gt; 49,
    name =&gt; &#39;&quot;\&quot;&lt;恩田&gt;&#39;,
}, {
    age =&gt; 49,
    name =&gt; &#39;;{五十嵐};&#39;,
});

ok(_json eq _syck);
done_testing;

# say _json(@members);
##=&gt; [{&quot;age&quot;:41,&quot;name&quot;:&quot;[\u00e5\u0080\u0089\u00e6\u008c\u0081]&quot;},{&quot;name&quot;:&quot;\&quot;\u00e6\u00b5\u0085\u00e6\u00b2\u00bc\&quot;\u002f\\\u002f&quot;,&quot;age&quot;:42},{&quot;name&quot;:&quot;\&quot;\\\&quot;\u003c\u00e6\u0081\u00a9\u00e7\u0094\u00b0\u003e&quot;,&quot;age&quot;:49},{&quot;age&quot;:49,&quot;name&quot;:&quot;;{\u00e4\u00ba\u0094\u00e5\u008d\u0081\u00e5\u00b5\u0090};&quot;}]

# say _syck(@members);
##=&gt; [{&quot;age&quot;:41,&quot;name&quot;:&quot;[\u00e5\u0080\u0089\u00e6\u008c\u0081]&quot;},{&quot;name&quot;:&quot;\&quot;\u00e6\u00b5\u0085\u00e6\u00b2\u00bc\&quot;\u002f\\\u002f&quot;,&quot;age&quot;:42},{&quot;name&quot;:&quot;\&quot;\\\&quot;\u003c\u00e6\u0081\u00a9\u00e7\u0094\u00b0\u003e&quot;,&quot;age&quot;:49},{&quot;age&quot;:49,&quot;name&quot;:&quot;;{\u00e4\u00ba\u0094\u00e5\u008d\u0081\u00e5\u00b5\u0090};&quot;}]
</code></pre></noscript></div>
</p>

<p>念頭にあるのは「安全で文字コードの違いなどを意識せずに扱いたい」ということ。JSONとJSON::Syckでは当然だけどデフォルトの挙動がいくらか違うし、出力されるJSON自体も違う場合がある。</p>

<p>```perl</p>

<h1>JSON</h1>

<p>JSON->new->ascii->utf8(0)&ndash;>encode(\@data);
```</p>

<p>Unicode文字列を"%uXXXX"形式にエンコードしたいから、<strong>JSON</strong>では<code>ascii</code>オプションをつける。<code>utf8(0)</code>はデフォルトの挙動なので無くても良い。</p>

<p>```perl</p>

<h1>JSON::Syck</h1>

<p>Encode::encode(&lsquo;JavaScript-UCS&rsquo;, JSON::Syck::Dump(\@data));
```</p>

<p>こちら<strong>JSON::Syck</strong>では<code>Encode::JavaScript::UCS</code>を使うことでそれを実現する。</p>

<p><code>perl
$json =~ s/([&lt;&gt;\/\+])/sprintf("\\u%04x",ord($1))/eg;
</code></p>

<p>それだけじゃ「&lt;、>、+」がそのままなので、置換しておく。それぞれこうすると安全なJSON文字列を得ることができる。これさえ覚えておけばプロジェクトによってどちらが使われていても、同じ結果が得られるAPIが書けるはず。</p>

<h2>渡す文字列</h2>

<p>euc-jpでencodedな文字列でもsjisでencodedな文字列でも(つまりutf8フラグ無し)、decodedな文字列(utf8フラグ有り)でもなんでも渡せる。</p>

<h2>返ってくる文字列</h2>

<p><code>"%uXXXX"</code>形式にエンコードされたutf8文字列が返ってくる。これを普通のutf8文字列(utf8フラグ無し)にしたければ</p>

<p><code>perl
Encode::decode('JavaScript-UCS', $str);
</code></p>

<p>すれば良いし、あとはeuc-jpとかで欲しければ普通に</p>

<p><code>perl
Encode::encode('euc-jp', Encode::decode_utf8(Encode::decode('JavaScript-UCS', $str)));
</code></p>

<p>すれば良いはず。違ったら教えて。</p>

<h3>参考</h3>

<ul>
<li><p><a href="http://d.hatena.ne.jp/hasegawayosuke/20110706/p1">SONのエスケープをどこまでやるか問題</a></p></li>
<li><p><a href="http://d.hatena.ne.jp/minesouta/20071005/p1">JSON::Syck &ndash; あえて言おう、JSONはYAMLであると。</a></p></li>
<li><p><a href="http://kawa.at.webry.info/200801/article_6.html">JSON モジュールの utf8 フラグ周りの仕様 tips 注意点</a></p></li>
<li><p><a href="http://blog.64p.org/entry/20111125/1322185155">Amon2とJSONとセキュリティ</a></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
